import { Environments } from '@mockoon/commons';
import { ProcessDescription } from 'pm2';
/**
 * Display a list of running processes information
 *
 * @param processes
 */
export declare const logProcesses: (processes: ProcessDescription[]) => void;
/**
 * Transform an environment name to be used as a process name
 *
 * @param environmentName
 */
export declare const transformEnvironmentName: (environmentName: string) => string;
/**
 * Filter processes by name and keep only the one prefixed with 'mockoon-'
 * @param processes
 */
export declare const filterProcesses: (processes: ProcessDescription[]) => ProcessDescription[];
/**
 * Check if a port is already in use
 * @param port
 */
export declare const portInUse: (port: number, hostname: string) => Promise<boolean>;
/**
 * Check if a port is valid
 *
 * @param port
 */
export declare const portIsValid: (port: number) => boolean;
/**
 * Check if --index or --name flag are provided and
 * prompt user to choose an environment if not.
 * If there is only one environment, launch it by default
 *
 * @param flags
 * @param environments
 */
export declare const promptEnvironmentChoice: <T extends {
    index: number | undefined;
    name: string | undefined;
}>(flags: T, environments: Environments) => Promise<T>;
/**
 * Get the path directory, except if it's a URL.
 *
 * @param path
 * @returns
 */
export declare const getDirname: (path: string) => string | null;
