"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.IsValidURL = exports.GetRouteResponseContentType = exports.GetContentType = void 0;
/**
 * Extract the content-type from an array of headers
 *
 * @param headers
 */
const GetContentType = (headers) => {
    const contentTypeHeader = headers.find((header) => header.key.toLowerCase() === 'content-type');
    if (contentTypeHeader) {
        return contentTypeHeader.value;
    }
    return null;
};
exports.GetContentType = GetContentType;
/**
 * Return a route response's content-type.
 * Environment's content-type is overridden by route's content-type
 *
 * @param environment
 * @param routeResponse
 */
const GetRouteResponseContentType = (environment, routeResponse) => {
    const routeResponseContentType = (0, exports.GetContentType)(routeResponse.headers);
    const environmentContentType = (0, exports.GetContentType)(environment.headers);
    return routeResponseContentType || environmentContentType || '';
};
exports.GetRouteResponseContentType = GetRouteResponseContentType;
/**
 * Test if URL is valid
 *
 * @param URL
 */
const IsValidURL = (address) => {
    try {
        const myURL = new URL(address);
        return true;
    }
    catch (e) {
        return false;
    }
};
exports.IsValidURL = IsValidURL;
//# sourceMappingURL=utils.js.map